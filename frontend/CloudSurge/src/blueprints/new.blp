using Gtk 4.0;
using Adw 1;

template $NewView: Adw.Window {
  modal: true;
  resizable: false;
  default-width: 600;
  default-height: 500;
  hide-on-close: true;
  title: _("Add Provider/Machine");

  ShortcutController {
    Shortcut shortcut_escape {
      trigger: "Escape";
      action: "action(window.close)";
    }
  }

  Box {
    orientation: vertical;

    Adw.HeaderBar headerbar {
      show-start-title-buttons: false;
      show-end-title-buttons: false;

      Button btn_cancel {
        label: _("_Cancel");
        use-underline: true;
        action-name: "window.close";
      }

      [end]
      Button btn_create {
        label: _("A_dd");
        use-underline: true;
        //sensitive: false;

        styles [
          "suggested-action",
        ]
      }
    }

    Stack stack_create {
      transition-type: crossfade;

      StackPage {
        name: "page_create";

        child: Adw.PreferencesPage {
          title: _("Add Provider/Machine");

          Adw.PreferencesGroup {
            title: _("Type");

            Adw.ActionRow provider_select {
              activatable-widget: check_provider;
              title: _("_Provider Account");
              use-underline: true;

              [prefix]
              CheckButton check_provider {
                valign: center;
                active: true;
              }
            }

            Adw.ActionRow machine_select {
              activatable-widget: check_machine;
              title: _("_Machine");
              use-underline: true;

              [prefix]
              CheckButton check_machine {
                valign: center;
                group: check_provider;
              }
            }
          }

          Adw.PreferencesGroup provider_settings {
            title: _("Settings");
            sensitive: true;

            Adw.EntryRow provider_name {
              use-markup: false;
              title: _("Name");
            }

            Adw.ComboRow provider_dropdown {
              title: _("Provider");
              subtitle: _("Choose preferred provider");

              model: StringList provider_choice {
                strings [
                  _("Aws"),
                  _("DigitalOcean"),
                ]
              };
            }

            Adw.EntryRow account_name {
              use-markup: false;
              title: _("Account name");
            }
            Adw.EntryRow access_key {
              use-markup: false;
              title: _("Access key");
            }
            Adw.EntryRow secret_key {
              use-markup: false;
              title: _("Secret key");
            }
            Adw.EntryRow region {
              use-markup: false;
              title: _("Region");
            }
            Adw.EntryRow token {
              use-markup: false;
              title: _("Token");

              visible: false;
            }
          }

          Adw.PreferencesGroup machine_settings {
            title: _("Settings");
            sensitive: true;
            visible: false;

            Adw.EntryRow vm_name {
              use-markup: false;
              title: _("Name");
            }
            Adw.ComboRow vm_provider_dropdown {
              title: _("Provider");
              subtitle: _("Choose provider for VM");

              model: StringList vm_provider_choice {
                strings [
                  _("SSH (No provider)"),
                  _("DigitalOcean1"),
                ]
              };
            }
            Adw.EntryRow provider {
              use-markup: false;
              title: _("Provider");
            }
            Adw.EntryRow cost_limit {
              use-markup: false;
              title: _("Cost limit $");
            }
            Adw.EntryRow public_ip {
              use-markup: false;
              title: _("Public IP");
            }
            Adw.EntryRow username {
              use-markup: false;
              title: _("Username");
            }
            Adw.EntryRow password {
              use-markup: false;
              title: _("Password");
            }
            Adw.EntryRow ssh_key {
              use-markup: false;
              title: _("SSH Key");
            }
          }
        };
      }

      StackPage {
        name: "page_statuses";

        child: Adw.StatusPage status_statuses {
          title: "Status";

          child: Box {
            orientation: vertical;
            spacing: 36;

            ScrolledWindow scrolled_output {
              margin-start: 50;
              margin-end: 50;
              min-content-height: 200;
              overflow: hidden;

              Label label_output {
                hexpand: true;
                valign: fill;
                wrap: true;
                selectable: true;
                xalign: 0;
                yalign: 0;

                styles [
                  "monospace",
                  "terminal",
                ]
              }

              styles [
                "card",
              ]
            }

            Button btn_close {
              valign: center;
              halign: center;
              label: _("_Close");
              use-underline: true;
              visible: false;

              styles [
                "pill",
              ]
            }
          };
        };
      }
    }
  }
}

Popover popover_duplicate {
  Label {
    margin-start: 6;
    margin-end: 6;
    margin-top: 6;
    margin-bottom: 6;
    xalign: 0;
    wrap: true;
    wrap-mode: word_char;
    ellipsize: none;
    lines: 4;
    use-markup: true;
    max-width-chars: 40;
    label: _("This name is unavailable, please try another.");
  }
}
